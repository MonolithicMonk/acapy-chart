{{- if .Values.vault.enabled }}
{{- $acapyLabel := include "acapy.label" . -}}
{{- $globalName := include "global.name"  . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "acapy.fullname" . }}
  labels:
    {{- include "acapy.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "acapy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secreDB: {{ include (print $.Template.BasePath "/db-secret.yaml") . | sha256sum }}
        {{- if .Values.global.persistence.existingSecret }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
    {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "acapy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "acapy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if not .Values.staticArgs.autoProvision }}
      initContainers:
        - name: acapy-provision
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
           "-c",
           "{{ include "acapy.registerLedger" . }} \
           sleep 15; \
           aca-py provision \
           --endpoint \"{{ .Values.endPointUrl }}\" \
           --wallet-type {{ .Values.staticArgs.walletType }} \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name {{ .Values.db.database }} \
           --wallet-storage-config '{\"url\":\"{{ include "acapy.dbHost" . }}:{{ include "acapy.dbPort" . }}\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"$(POSTGRES_USERNAME)\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"$(POSTGRES_USERNAME)\",\"admin_password\":\"$(POSTGRES_PASSWORD)\"}' \
           --genesis-transactions-list genesis-transaction-list.yaml \
           "
          ]
          command:
          - /bin/bash
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-database-creds
                  key: postgresql_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-database-creds
                  key: postgresql_password
            {{- if not .Values.staticArgs.multitenant }}
            - name: ACAPY_WALLET_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-acapy
                  key: acapy_seed
            {{- end }}
            - name: ACAPY_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-acapy
                  key: acapy_wallet_key
            {{- if .Values.staticArgs.multitenant }}
            - name: ACAPY_MULTITENANT_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-acapy
                  key: acapy_multitenant_jwt_secret
            {{- end }}
          volumeMounts:
            - name: ledger
              mountPath: "/home/indy/genesis-transaction-list.yaml"
              subPath: "genesis-transaction-list.yaml"
              readOnly: true
            - name: {{ template "acapy.fullname" . }}-vault-database-creds
              mountPath: /home/indy/vault-database-creds
              readOnly: true
      {{- end }}
      containers:
        - name: acapy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [
           "-c",
           "aca-py start \
           --arg-file acapy-static-args.yml \
           --inbound-transport {{ .Values.inbound.module }} '{{ .Values.inbound.host }}' {{ .Values.service.httpPort }} \
           --genesis-transactions-list genesis-transaction-list.yaml \
           --endpoint \"{{ .Values.endPointUrl }}\" \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name {{ .Values.db.database }} \
           --wallet-storage-config '{\"url\":\"{{ include "acapy.dbHost" . }}:{{ include "acapy.dbPort" . }}\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"$(POSTGRES_USERNAME)\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"$(POSTGRES_USERNAME)\",\"admin_password\":\"$(POSTGRES_PASSWORD)\"}' \
           --label {{ $acapyLabel }} \
           {{- if .Values.tails.enabled }}
           --tails-server-base-url {{ include "acapy.tails.baseUrl" . }} \
           --tails-server-upload-url {{ include "acapy.tails.uploadUrl" . }} \
           {{- end }}
           {{- if .Values.admin.enabled }}
           --admin '{{ .Values.admin.host }}' {{ .Values.service.adminPort }} \
           {{- end }}
           {{- if .Values.readOnlyMode }}
           --read-only-ledger \
           {{- end }}
           {{- if .Values.webhookUrl }}
           --webhook-url {{ .Values.webhookUrl }}\
           {{- end }}
           {{- if .Values.invite }}
           --invite \
           {{- end }}
           {{- if .Values.inviteLabel }}
           --invite-label {{ .Values.inviteLabel }} \
           {{- end }}
           {{- if .Values.trace }}
           --trace \
           {{- end }}
           {{- if .Values.traceTarget }}
           --trace-target {{ .Values.traceTarget }} \
           {{- end }}
           {{- if .Values.traceTag }}
           --trace-tag {{ .Values.traceTag }} \
           {{- end }}
           {{- if .Values.traceLabel }}
           --trace-label {{ .Values.traceLabel }} \
           {{- end }}
           {{- if .Values.imageUrl }}
           --image-url {{ .Values.imageUrl }} \
           {{- end }}
           {{- if .Values.walletRekey }}
           --wallet-rekey {{ .Values.walletRekey }} \
           {{- end }}
           {{- if .Values.replacePublic }}
           --replace-public-did \
           {{- end }}
           {{- if .Values.recreateWallet }}
           --recreate-wallet \
           {{- end }}
           "
          ]
          command:
          - /bin/bash
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.service.adminPort }}
              protocol: TCP
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-database-creds
                  key: postgresql_username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-database-creds
                  key: postgresql_password
            {{- if .Values.admin.apiKey.enabled }}
            - name: ACAPY_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-shared-services
                  key: acapy_admin_api_key
            {{- else }}
            - name: ACAPY_ADMIN_INSECURE_MODE
              value: "true"
            {{- end }}
            - name: ACAPY_WALLET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-acapy
                  key: acapy_wallet_key
            {{- if .Values.staticArgs.multitenant }}
            - name: ACAPY_MULTITENANT_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "acapy.fullname" . }}-vault-secret-acapy
                  key: acapy_multitenant_jwt_secret
            {{- end }}
          livenessProbe:
            httpGet:
              path: /status/live
              port: {{ .Values.service.adminPort }}
            initialDelaySeconds: 45
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /status/ready
              port: {{ .Values.service.adminPort }}
            initialDelaySeconds: 20
            periodSeconds: 10    
          volumeMounts:
          - name: config
            mountPath: "/home/indy/acapy-static-args.yml"
            subPath: "acapy-static-args.yml"
            readOnly: true
          - name: ledger
            mountPath: "/home/indy/genesis-transaction-list.yaml"
            subPath: "genesis-transaction-list.yaml"
            readOnly: true
          - name: {{ template "acapy.fullname" . }}-vault-database-creds
            mountPath: /home/indy/vault-database-creds
            readOnly: true
          - name: {{ template "acapy.fullname" . }}-vault-secret-shared-services
            mountPath: /home/indy/vault-secret-shared-services
            readOnly: true
          - name: {{ template "acapy.fullname" . }}-vault-secret-acapy
            mountPath: /home/indy/vault-secret-acapy
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "acapy.fullname" . }}
            items:
            - key: "acapy-static-args.yaml"
              path: "acapy-static-args.yml"
        - name: ledger
          configMap:
            name: {{ include "acapy.fullname" . }}
            items:
            - key: "genesis-transaction-list.yaml"
              path: "genesis-transaction-list.yaml"
        - name: {{ template "acapy.fullname" . }}-vault-database-creds
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ template "acapy.fullname" . }}-vault-database-creds
        - name: {{ template "acapy.fullname" . }}-vault-secret-shared-services
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ template "acapy.fullname" . }}-vault-secret-shared-services
        - name: {{ template "acapy.fullname" . }}-vault-secret-acapy
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ template "acapy.fullname" . }}-vault-secret-acapy
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}