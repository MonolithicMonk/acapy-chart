# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Hostname to be used for default hostpaths in ingress, prefixed with the charts name
  nameOverride: ""
  # -- Hostname prefix to be used for default hostpaths in ingress
  fullnameOverride: ""

  # -- Domain suffix to be used for default hostpaths in ingress
  ingressSuffix: .acapy

  persistence:
    # -- Name of existing secret to use for PostgreSQL passwords
    existingSecret: false

  # -- The used ledger. Will be used for default values. Any of: idu, bcovrin-test
  ledger: bcovrin-test

acapy:
  image:
    repository: bcgovimages/aries-cloudagent
    pullPolicy: IfNotPresent
    # --  Overrides the image tag whose default is the chart appVersion.
    tag: py36-1.16-1_0.7.4


  # -- Used for backwards compatibility
  postgresql:
    # -- Can be used to overwrite 'postgresql.postgresqlDatabase', if set acapy and bpa backends use separate databases
    database: ""
  
  endPointUrl: ""

  admin:
    # Specify the host and port on which to run the
    # administrative server. If not provided, no admin
    # server is made available.
    # Readiness and liveness checks will fail if not enabled
    enabled: 
    host: 0.0.0.0
    # Enable or disable admin url api key
    apiKey:
      enabled:
      # -- Please change: key used to protect acapy's admin endpoint
      adminURLApiKey: ""
  
  # -- Please change: the agent seed, 32 characters e.g. a UUID without the dashes. If the ledger is bcovrin-test the seed will be registered automatically. In all other cases this needs to happen manually beforehand.
  agentSeed: ""
  # -- Please change: Wallet encryption key, be aware that if this value is changed later aca-py needs to be restarted with the '--wallet-rekey' param which is not mapped
  walletKey: ""
  
  # Send webhooks containing internal state changes to the
  # specified URL. Optional API key to be passed in the
  # request body can be appended using a hash separator
  # [#] <url#api_key>
  webhookUrl: ""

  # After startup, generate and print a new out-of-band
  # connection invitation URL. Default: false.
  invite:

  # Specify the label of the generated invitation
  inviteLabel: ""

  # Generate tracing events.  Default: false
  trace:

  # Target for trace events ("log", "message", or http endpoint)
  traceTarget: ""

  # Tag to be included when logging events
  traceTag: ""

  # Label (agent name) used logging events
  traceLabel: ""

  # Specifies the image url for this agent.
  imageUrl: ""

  # Specifies a new master key value to which to rotate
  # and to open the wallet next time
  walletRekey: ""

  # If this parameter is set and an agent already has a
  # public DID, and the '--seed' parameter specifies a new
  # DID, the agent will use the new DID in place of the
  # existing DID. Default: false.
  replacePublic:

  # If an existing wallet exists with the same name,
  # remove and recreate it during provisioning.  Default: false
  recreateWallet:

  labelOverride: ""

  readOnlyMode: false

  staticArgs:
    autoAcceptInvites: false
    autoAcceptRequests: false
    autoRespondMessages: false
    autoRespondCredentialProposal: false
    autoRespondCredentialOffer: false
    autoRespondCredentialRequest: false
    autoRespondPresentationProposal: true
    autoRespondPresentationRequest: false
    autoStoreCredential: true
    autoVerifyPresentation: false
    autoPingConnection: true
    autoProvision: true
    autoDiscloseFeatures: true
    notifyRevocation: true
    monitorRevocationNotification: true
    monitorPing: true
    emitNewDidcommPrefix: true
    emitNewDidcommMimeType: true
    enableUndeliveredQueue: true
    exchUseUnencryptedTags: true
    preserveExchangeRecords: false
    publicInvites: true
    # -- indy or askar
    walletType: askar
    logLevel: debug

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    runAsUser: 1001

  service:
    type: ClusterIP
    clusterIP: 
    adminPort: 8031
    httpPort: 8030

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # Uncomment this to define your own hosts and override global.ingressSuffix
    # hosts:
    #     host:
    #     paths: ['/']
    tls: []
    #  - secretName: my-acapy-tls
    #    hosts:
    #      - my-acapy.local
    className: ""

  openshift:
    route:
      enabled: false
      path: "/"
      targetPort: http
      timeout: 30s
      tls:
        enabled: true
        insecureEdgeTerminationPolicy: None
        termination: edge
      wildcardPolicy: None

  tails:
    # -- Set to true to enable revocation (external tails server required)
    enabled: false

    # -- Override the otherwise ledger-specifically generated base URL of the external tails server
    baseUrlOverride: ""

    # -- Override the otherwise ledger-specifically generated upload URL of the external tails server
    uploadUrlOverride: ""

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    requests:
      cpu: 100m
      memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  # -- If true, the Postgres chart is deployed
  enabled: false

  # -- If prostgres.enabled is set to false this can be used to set the postgresql dns name. defaults to Chart.Name-postgresql otherwise
  fullnameOverride: ""

  # --  PostgreSQL service configuration
  service:
    port: 
    hostname: ""

  # --  PostgreSQL User to create. Do not change - otherwise non-admin user is created!
  postgresqlUsername: ""

  # --  PostgreSQL Password for the new user. If not set, a random 10 characters password will be used.
  postgresqlPassword: ""

  # -- PostgreSQL Database to create.
  postgresqlDatabase: ""

  tls:
    # -- Enable TLS traffic support
    enabled: false
    # -- Generate automatically self-signed TLS certificates
    autoGenerated: false
  volumePermissions:
    # -- Needed when using self-signed TLS certificates
    enabled: false

  # --  Persistent Volume Storage configuration. ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:

    # -- Enable PostgreSQL persistence using Persistent Volume Claims.
    enabled: false
    size: 1Gi
    storageClass: default
  image:
    tag: 12
  # -- add securityContext (fsGroup, runAsUser). These need to be false for Openshift 4
  securityContext:
    enabled: true
  containerSecurityContext:
    enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 256Mi

diode:
  # If enabled, the deployment will be created
  enabled: false
  replicaCount: 1

  image:
    repository: cloud.canister.io:5000/dgateled/diode-image-bullseye
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 0.1.7

  imagePullSecrets:
    - name: registry-pullsecrets
  nameOverride: ""
  fullnameOverride: 

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    # Likely true if bind and false if publish
    enabled: true
    type: ClusterIP
    clusterIP: 
    port: 
    targetPort: 
    protocol: TCP

  diodeConfiguration:
    localServer:
      diodeHex: ""
      diodePinata: ""
      diodeKeyName: ""
      # Protocol used for the diode connection. Default: tls.
      # Options are tcp, udp, tls
      protocol: tcp
      # Options are "public" and "private"
      publishType: 
      # Diode mode. Options are "publish", "bind", and "both"
      mode: 
    remoteServer:
      # Remote diode configuration
      remoteDiodeHex: ""
      port: 
      # Protocol used for the diode connection. Default: tls.
      # Options are tcp, udp, tls
      protocol: ""
      # Type of connection. Default: public. 
      # Options are "public" and "private"
      publishType: ""
      # Only publish for now
      mode: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    keepPvc: true
    # Size of storage. Default: 20Mi
    size: "20Mi"